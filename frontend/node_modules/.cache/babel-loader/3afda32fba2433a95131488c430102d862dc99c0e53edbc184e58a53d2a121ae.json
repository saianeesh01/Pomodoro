{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saian\\\\OneDrive\\\\Documents\\\\pomodoro-planner\\\\frontend\\\\src\\\\components\\\\CalendarScheduler.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Calendar from \"react-calendar\";\nimport { addSchedule, getSchedule } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scheduler = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [schedules, setSchedules] = useState([]);\n  const userEmail = \"testuser@example.com\"; // Hardcoded for now, replace later\n\n  useEffect(() => {\n    getSchedule(userEmail).then(res => setSchedules(res.data));\n  }, [selectedDate]);\n  const handleAddSchedule = async () => {\n    const newSchedule = {\n      email: userEmail,\n      start_time: selectedDate.toISOString(),\n      end_time: new Date(selectedDate.getTime() + 25 * 60 * 1000).toISOString(),\n      description: \"Pomodoro Session\"\n    };\n    await addSchedule(newSchedule);\n    setSchedules([...schedules, newSchedule]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: setSelectedDate,\n      value: selectedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddSchedule,\n      className: \"bg-green-500 text-white px-4 py-2 mt-4 rounded\",\n      children: \"Schedule Pomodoro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: schedules.map((s, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [s.description, \" - \", new Date(s.start_time).toLocaleTimeString()]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Scheduler, \"KB6qffipQ9UweYntikQ2Nu2/jwI=\");\n_c = Scheduler;\nexport default Scheduler;\nvar _c;\n$RefreshReg$(_c, \"Scheduler\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","addSchedule","getSchedule","jsxDEV","_jsxDEV","Scheduler","_s","selectedDate","setSelectedDate","Date","schedules","setSchedules","userEmail","then","res","data","handleAddSchedule","newSchedule","email","start_time","toISOString","end_time","getTime","description","children","onChange","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","map","s","index","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/saian/OneDrive/Documents/pomodoro-planner/frontend/src/components/CalendarScheduler.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { addSchedule, getSchedule } from \"../api/api\";\r\n\r\nconst Scheduler = () => {\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [schedules, setSchedules] = useState([]);\r\n  const userEmail = \"testuser@example.com\"; // Hardcoded for now, replace later\r\n\r\n  useEffect(() => {\r\n    getSchedule(userEmail).then((res) => setSchedules(res.data));\r\n  }, [selectedDate]);\r\n\r\n  const handleAddSchedule = async () => {\r\n    const newSchedule = {\r\n      email: userEmail,\r\n      start_time: selectedDate.toISOString(),\r\n      end_time: new Date(selectedDate.getTime() + 25 * 60 * 1000).toISOString(),\r\n      description: \"Pomodoro Session\"\r\n    };\r\n    await addSchedule(newSchedule);\r\n    setSchedules([...schedules, newSchedule]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Calendar onChange={setSelectedDate} value={selectedDate} />\r\n      <button onClick={handleAddSchedule} className=\"bg-green-500 text-white px-4 py-2 mt-4 rounded\">\r\n        Schedule Pomodoro\r\n      </button>\r\n      <ul>\r\n        {schedules.map((s, index) => (\r\n          <li key={index}>\r\n            {s.description} - {new Date(s.start_time).toLocaleTimeString()}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scheduler;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,SAASC,WAAW,EAAEC,WAAW,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAIW,IAAI,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMc,SAAS,GAAG,sBAAsB,CAAC,CAAC;;EAE1Cb,SAAS,CAAC,MAAM;IACdG,WAAW,CAACU,SAAS,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKH,YAAY,CAACG,GAAG,CAACC,IAAI,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACR,YAAY,CAAC,CAAC;EAElB,MAAMS,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAMC,WAAW,GAAG;MAClBC,KAAK,EAAEN,SAAS;MAChBO,UAAU,EAAEZ,YAAY,CAACa,WAAW,CAAC,CAAC;MACtCC,QAAQ,EAAE,IAAIZ,IAAI,CAACF,YAAY,CAACe,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAACF,WAAW,CAAC,CAAC;MACzEG,WAAW,EAAE;IACf,CAAC;IACD,MAAMtB,WAAW,CAACgB,WAAW,CAAC;IAC9BN,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEO,WAAW,CAAC,CAAC;EAC3C,CAAC;EAED,oBACEb,OAAA;IAAAoB,QAAA,gBACEpB,OAAA,CAACJ,QAAQ;MAACyB,QAAQ,EAAEjB,eAAgB;MAACkB,KAAK,EAAEnB;IAAa;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5D1B,OAAA;MAAQ2B,OAAO,EAAEf,iBAAkB;MAACgB,SAAS,EAAC,gDAAgD;MAAAR,QAAA,EAAC;IAE/F;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT1B,OAAA;MAAAoB,QAAA,EACGd,SAAS,CAACuB,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACtB/B,OAAA;QAAAoB,QAAA,GACGU,CAAC,CAACX,WAAW,EAAC,KAAG,EAAC,IAAId,IAAI,CAACyB,CAAC,CAACf,UAAU,CAAC,CAACiB,kBAAkB,CAAC,CAAC;MAAA,GADvDD,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACxB,EAAA,CAnCID,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}